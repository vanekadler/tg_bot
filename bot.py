from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = "8093577977:AAFpJGqDIGSWIWi21zP3SUAdVEiZ8-wOaCg"  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
MAIN_PRICE_FILE = "price.pdf"
SOHO_PRICE_FILE = "soho_price.pdf"
YOUR_TELEGRAM_ID = 6270030591  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π ID (—É–∑–Ω–∞–π —É @myidbot)

# === –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ===
keyboard = [
    [KeyboardButton("üìÅ –ü—Ä–∞–π—Å GEOSOFT"), KeyboardButton("üì¶ –ù–∞–ª–∏—á–∏–µ –Ω–∞ —Å–∫–ª–∞–¥–µ")],
    [KeyboardButton("üßæ –ü—Ä–∞–π—Å SOCO/–†–∞—Å—Ö–æ–¥–Ω–∏–∫–∏")],
    [KeyboardButton("üõí –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑")],
    [KeyboardButton("‚ùì FAQ")],
    [KeyboardButton("üì© –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É")]
]
reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üíé –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç GOFFSHTEIN!\n\n"
        "–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç, –¥–µ–ª–∞—è –∑–∞–∫–∞–∑—ã —á–µ—Ä–µ–∑ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ ‚Äî –í—ã —ç–∫–æ–Ω–æ–º–∏—Ç–µ –≤—Ä–µ–º—è –∏ –¥–µ–Ω—å–≥–∏.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ üëá",
        reply_markup=reply_markup
    )
# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()

    # --- –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–∞–π—Å (GEOSOFT) ---
    if text == "üìÅ –ø—Ä–∞–π—Å geosoft".lower():
        try:
            with open("price.txt", "r", encoding="utf-8") as txt_file:
                price_text = txt_file.read()
            await update.message.reply_text(price_text)
            with open(MAIN_PRICE_FILE, "rb") as file:
                await update.message.reply_document(document=file, filename="–ü—Ä–∞–π—Å-GEOSOFT.pdf")
        except FileNotFoundError:
            await update.message.reply_text("‚ùå –§–∞–π–ª 'price.txt' –∏–ª–∏ 'price.pdf' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ.")

    # --- –ü—Ä–∞–π—Å SOCO / –†–∞—Å—Ö–æ–¥–Ω–∏–∫–∏ ---
    elif text == "üßæ –ø—Ä–∞–π—Å soco/—Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏".lower():
        soho_text = (
            "üìé –ü—Ä–∞–π—Å –Ω–∞ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏ –∏ –ø—Ä–æ–¥—É–∫—Ç—ã SOCO:\n\n"
            
        )
        await update.message.reply_text(soho_text)
        try:
            with open(SOHO_PRICE_FILE, "rb") as file:
                await update.message.reply_document(document=file, filename="–ü—Ä–∞–π—Å-SOCO.pdf")
        except FileNotFoundError:
            await update.message.reply_text("‚ùå –§–∞–π–ª 'soho_price.pdf' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ.")

    # --- –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ ---
    elif text == "üõí —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑".lower():
        await update.message.reply_text("üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:")
        user_states[update.message.from_user.id] = "awaiting_order"

    # --- –ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ —Å–µ–±–µ –≤ –ª–∏—á–∫—É ---
    elif update.message.from_user.id in user_states and user_states[update.message.from_user.id] == "awaiting_order":
        order_text = (
            f"üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.message.from_user.first_name} "
            f"(@{update.message.from_user.username or '–±–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞'})\n\n"
            f"–°–æ–æ–±—â–µ–Ω–∏–µ:\n{update.message.text}"
        )
        try:
            await context.bot.send_message(chat_id=YOUR_TELEGRAM_ID, text=order_text)
            await update.message.reply_text("‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞: {str(e)}")
        finally:
            del user_states[update.message.from_user.id]

    # --- –ù–∞–ª–∏—á–∏–µ –Ω–∞ —Å–∫–ª–∞–¥–µ ---
    elif text == "üì¶ –Ω–∞–ª–∏—á–∏–µ –Ω–∞ —Å–∫–ª–∞–¥–µ".lower():
        await update.message.reply_text("‚úÖ –í—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –Ω–∞–ª–∏—á–∏–∏. –£—Ç–æ—á–Ω–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞.")

    # --- FAQ ---
    elif text == "‚ùì faq".lower():
        faq_text = (
            "‚ùì –ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –º—ã –≤—ã—à–ª–µ–º —Å—á–µ—Ç.\n\n"
            "üöö –ï—Å—Ç—å –ª–∏ –¥–æ—Å—Ç–∞–≤–∫–∞?\n"
            "–î–∞, –≤–æ–∑–º–æ–∂–Ω–∞ –ø–æ –†–§ –∏ —Å—Ç—Ä–∞–Ω–∞–º –°–ù–ì.\n\n"
            "üìÑ –ú–æ–∂–Ω–æ –ª–∏ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ –±–µ–∑–Ω–∞–ª—É?\n"
            "–î–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤."
        )
        await update.message.reply_text(faq_text)

    # --- –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É ---
    elif text == "üì© –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É".lower():
        await update.message.reply_text("üîî –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!")

    # --- –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ ---
    else:
        await update.message.reply_text("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ.", reply_markup=reply_markup)


# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
app = ApplicationBuilder().token(TOKEN).build()

app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
app.run_polling()